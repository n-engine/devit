name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    name: Build, fmt, clippy, test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: fmt (check)
        id: fmt
        continue-on-error: true
        run: cargo fmt --all -- --check

      - name: rustfmt patch (artifact)
        if: steps.fmt.outcome == 'failure'
        run: |
          cargo fmt --all
          git diff > rustfmt.patch || true
        shell: bash

      - name: Upload rustfmt.patch
        if: steps.fmt.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: rustfmt-patch
          path: rustfmt.patch

      - name: Fail on formatting
        if: steps.fmt.outcome == 'failure'
        run: |
          echo "Formatting issues detected. Download rustfmt-patch artifact to apply." >&2
          exit 1

      - name: clippy
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: build
        run: cargo build --workspace --all-targets

      - name: test
        run: |
          cargo test -p devit-common
          cargo test -p devit --tests || true # integration tests may require network; allow failure

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build-test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: Build release
        run: cargo build --release -p devit
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: devit-${{ matrix.os }}
          path: target/release/devit
