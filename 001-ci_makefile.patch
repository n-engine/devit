diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml
--- a/.github/workflows/ci.yml
+++ b/.github/workflows/ci.yml
@@ -101,7 +101,7 @@
       - name: Cache cargo
         uses: Swatinem/rust-cache@v2
       - name: Build release
-        run: cargo build --release -p devit
+        run: cargo build --release -p devit-cli --bin devit
       - name: Upload artifact
         uses: actions/upload-artifact@v4
         with:
diff --git a/Makefile b/Makefile
--- a/Makefile
+++ b/Makefile
@@ -1,6 +1,11 @@
 .ONESHELL:
 SHELL := bash
 
+# Paquet CLI renommé (conflit "two packages named `devit`" résolu).
+# On garde le nom DU BINAIRE `devit`.
+DEVIT_PKG ?= devit-cli
+DEVIT_BIN ?= devit
+
 .PHONY: fmt fmt-check fmt-fix clippy lint test test-cli build build-release smoke ci check verify help
 
 help:
@@ -14,3 +19,36 @@
 
 fmt-fix: fmt
 	#
+
+# ===== Cibles CLI robustes (n’ajoutent aucun effet de bord) =====
+# On n’écrase pas tes cibles existantes : on ajoute des variantes explicites.
+.PHONY: build-cli run-cli release-cli check-cli
+
+build-cli:
+	cargo build -p $(DEVIT_PKG) --bin $(DEVIT_BIN) --verbose
+
+run-cli:
+	cargo run -p $(DEVIT_PKG) --bin $(DEVIT_BIN) -- --help
+
+release-cli:
+	cargo build -p $(DEVIT_PKG) --bin $(DEVIT_BIN) --release --verbose
+
+# Lint + tests sur tout le workspace, stricte (warning = erreur).
+check-cli:
+	cargo fmt --all -- --check
+	cargo clippy --workspace --all-targets -- -D warnings
+	cargo test --workspace --all-targets --no-fail-fast -- --nocapture
+
+# ===== Raccourcis sûrs pour CI locale =====
+.PHONY: ci-cli
+ci-cli: check-cli build-cli
+
+# ===== Aide courte =====
+.PHONY: help-cli
+help-cli:
+	@echo "build-cli      : build $(DEVIT_BIN) depuis $(DEVIT_PKG)"
+	@echo "release-cli    : build release du binaire $(DEVIT_BIN)"
+	@echo "run-cli        : lance $(DEVIT_BIN) --help"
+	@echo "check-cli      : fmt + clippy -D warnings + tests"
+	@echo "ci-cli         : check-cli + build-cli"
